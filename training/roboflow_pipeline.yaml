# PIPELINE DEFINITION
# Name: roboflow-yolo-training
# Inputs:
#    api_key: str
#    project_name: str
#    version_number: int
#    workspace: str
components:
  comp-download-dataset:
    executorLabel: exec-download-dataset
    inputDefinitions:
      parameters:
        api_key:
          parameterType: STRING
        project_name:
          parameterType: STRING
        version_number:
          parameterType: NUMBER_INTEGER
        workspace:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-train-model:
    executorLabel: exec-train-model
    inputDefinitions:
      parameters:
        dataset_path:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-download-dataset:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - download_dataset
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'opencv-python-headless'\
          \ 'ultralytics' 'roboflow' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef download_dataset(api_key: str, workspace: str, project_name:\
          \ str, version_number: int) -> str:\n    import os\n    import subprocess\n\
          \    from roboflow import Roboflow\n\n    rf = Roboflow(api_key=api_key)\n\
          \    project = rf.workspace(workspace).project(project_name)\n    version\
          \ = project.version(version_number)\n    dataset_path = version.download(\"\
          yolov11\")\n\n    return dataset_path\n\n"
        image: python:3.9
    exec-train-model:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'opencv-python-headless'\
          \ 'ultralytics' 'roboflow' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_model(dataset_path: str) -> str:\n    import os\n    import\
          \ subprocess\n\n    from ultralytics import YOLO\n\n    model = YOLO(\"\
          yolo11n.pt\")\n    results = model.train(\n        data=os.path.join(dataset_path,\
          \ \"data.yaml\"),\n        epochs=100,\n        imgsz=640,\n        batch=16,\n\
          \        device=\"cuda\"\n    )\n\n    best_model_path = os.path.join(\"\
          runs/train\", results.save_dir, \"weights/best.pt\")\n    return best_model_path\n\
          \n"
        image: python:3.9
pipelineInfo:
  name: roboflow-yolo-training
root:
  dag:
    tasks:
      download-dataset:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-download-dataset
        inputs:
          parameters:
            api_key:
              componentInputParameter: api_key
            project_name:
              componentInputParameter: project_name
            version_number:
              componentInputParameter: version_number
            workspace:
              componentInputParameter: workspace
        taskInfo:
          name: download-dataset
      train-model:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-model
        dependentTasks:
        - download-dataset
        inputs:
          parameters:
            dataset_path:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: download-dataset
        taskInfo:
          name: train-model
  inputDefinitions:
    parameters:
      api_key:
        parameterType: STRING
      project_name:
        parameterType: STRING
      version_number:
        parameterType: NUMBER_INTEGER
      workspace:
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.7.0
